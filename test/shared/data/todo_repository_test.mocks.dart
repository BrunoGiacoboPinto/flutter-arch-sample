// Mocks generated by Mockito 5.3.0 from annotations
// in flutter_arch_sample/test/shared/data/todo_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:flutter_arch_sample/shared/data/todo_data_source.dart' as _i2;
import 'package:flutter_arch_sample/shared/models/models.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeTodoApi_0 extends _i1.SmartFake implements _i2.TodoApi {
  _FakeTodoApi_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeTodoModel_1 extends _i1.SmartFake implements _i3.TodoModel {
  _FakeTodoModel_1(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [RemoteTodoDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoteTodoDataSource extends _i1.Mock
    implements _i2.RemoteTodoDataSource {
  MockRemoteTodoDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TodoApi get todoApi => (super.noSuchMethod(Invocation.getter(#todoApi),
          returnValue: _FakeTodoApi_0(this, Invocation.getter(#todoApi)))
      as _i2.TodoApi);
  @override
  _i4.Future<void> addAllTodos(List<_i3.TodoModel>? todos) =>
      (super.noSuchMethod(Invocation.method(#addAllTodos, [todos]),
              returnValue: _i4.Future<void>.value(),
              returnValueForMissingStub: _i4.Future<void>.value())
          as _i4.Future<void>);
  @override
  _i4.Future<void> addTodo(_i3.TodoModel? todo) => (super.noSuchMethod(
      Invocation.method(#addTodo, [todo]),
      returnValue: _i4.Future<void>.value(),
      returnValueForMissingStub: _i4.Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<_i3.TodoModel> getTodoById(int? id) => (super.noSuchMethod(
          Invocation.method(#getTodoById, [id]),
          returnValue: _i4.Future<_i3.TodoModel>.value(
              _FakeTodoModel_1(this, Invocation.method(#getTodoById, [id]))))
      as _i4.Future<_i3.TodoModel>);
  @override
  _i4.Future<List<_i3.TodoModel>> getTodos() => (super.noSuchMethod(
          Invocation.method(#getTodos, []),
          returnValue: _i4.Future<List<_i3.TodoModel>>.value(<_i3.TodoModel>[]))
      as _i4.Future<List<_i3.TodoModel>>);
}
